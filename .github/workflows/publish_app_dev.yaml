name: app-build-action-dev

on:
  workflow_dispatch:

jobs:
  # 打包Android TV
  build-android-tv:
    runs-on: macos-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: dev

      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: "17"
          cache: "gradle"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.x'
          cache: true 

      # 恢复依赖
      - name: Restore packages
        run: |
          cd simple_live_tv_app
          flutter pub get

      # TV APK签名设置
      - name: Download Android TV keystore
        id: android_tv_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: keystore_tv.jks
          encodedString: ${{ secrets.TV_KEYSTORE_BASE64 }}

      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_tv_keystore.outputs.filePath }}" > simple_live_tv_app/android/key.properties
          echo "storePassword=${{ secrets.TV_STORE_PASSWORD }}" >> simple_live_tv_app/android/key.properties
          echo "keyPassword=${{ secrets.TV_KEY_PASSWORD }}" >> simple_live_tv_app/android/key.properties
          echo "keyAlias=${{ secrets.TV_KEY_ALIAS }}" >> simple_live_tv_app/android/key.properties

      # 打包 Android TV APK
      - name: Build TV APK
        run: |
          cd simple_live_tv_app
          flutter build apk --release --split-per-abi

      # 上传 TV APK 至 Artifacts
      - name: Upload TV APK to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android_tv
          path: |
            simple_live_tv_app/build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
            simple_live_tv_app/build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
            simple_live_tv_app/build/app/outputs/flutter-apk/app-x86_64-release.apk

      - run: echo "📺 Android TV job's status is ${{ job.status }}."

  # 打包MacOS
  build-macos:
    runs-on: macos-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: dev

      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: "17"
          cache: "gradle"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.x'
          cache: true

      - name: Enable Flutter Desktop
        run: flutter config --enable-macos-desktop

      - name: Restore packages
        run: |
          cd simple_live_app
          flutter pub get

      - name: Install appdmg
        run: npm install -g appdmg

      - name: Install flutter_distributor
        run: dart pub global activate flutter_distributor

      - name: Build MacOS
        run: |
          cd simple_live_app
          flutter_distributor package --platform macos --targets dmg,zip --skip-clean

      - uses: actions/upload-artifact@v4
        with:
          name: mac
          path: |
            simple_live_app/build/dist/*/*.dmg
            simple_live_app/build/dist/*/*.zip

      - run: echo "🍏 MacOS job's status is ${{ job.status }}."

  # 打包Windows
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.x"
          cache: true

      - name: Enable Flutter Desktop
        run: flutter config --enable-windows-desktop

      - name: Restore Packages
        run: |
          cd simple_live_app
          flutter pub get

      - name: Install flutter_distributor
        run: dart pub global activate flutter_distributor

      - name: Build Windows
        run: |
          cd simple_live_app
          flutter_distributor package --platform windows --targets msix,zip --skip-clean

      - uses: actions/upload-artifact@v4
        with:
          name: windows
          path: |
            simple_live_app/build/dist/*/*.msix
            simple_live_app/build/dist/*/*.zip

      - run: echo "🪟 Windows job's status is ${{ job.status }}."
